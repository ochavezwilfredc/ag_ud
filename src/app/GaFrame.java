package app;
import javax.swing.*;
import javax.swing.filechooser.*;
import javax.swing.plaf.*;
import javax.swing.plaf.basic.*;

import org.jgap.*;
import org.jgap.impl.*;

import java.io.*;

import java.beans.*;
import java.awt.*;
import java.awt.event.*;
import static javax.swing.JFileChooser.*;
import splp.SPL;
import org.syntax.jedit.*;
import org.syntax.jedit.tokenmarker.*;

import java.util.*;
import java.net.*;

/**
 *Formulario principal aqui estan todos los metodos enventos e interfaces de usuario
 */
public class GaFrame extends javax.swing.JFrame {
    
    /** Creates new form GaFreme */
    evolution evo;
    int fileOpened;
    File GenFile;
    
    int[][] InitAlel = new int[16][1];
     
    
    static void renderSplashFrame(Graphics2D g, int frame) { 
        final String[] comps = {"foo", "bar", "baz"}; 
        g.setComposite(AlphaComposite.Clear); 
        g.fillRect(130,250,280,40); 
        g.setPaintMode(); 
        g.setColor(Color.BLACK); 
        g.drawString("Loading "+comps[(frame/5)%3]+"...", 130, 260); 
        g.fillRect(130,270,(frame*10)%280,20); 
    }    
    
    
    public GaFrame() {
        /* Constructor de la clase*/
        fileOpened = 0;
        String laf = UIManager.getSystemLookAndFeelClassName();
        try {
                UIManager.setLookAndFeel(laf);
                // If you want the Cross Platform L&F instead, comment out the above line and
                // uncomment the following:
                // UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
        } catch (UnsupportedLookAndFeelException exc) {
                System.err.println("Warning: UnsupportedLookAndFeel: " + laf);
        } catch (Exception exc) {
                System.err.println("Error loading " + laf + ": " + exc);
        }
        
        initComponents();
        
        /**
         * Pantalla de Splsh ...
         **/
        final SplashScreen  splash = SplashScreen.getSplashScreen();
        if( splash == null )    {
           
        } 
        else    {
            Rectangle splashBounds = splash.getBounds();
                     
        }
        setVisible(true);  

    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btGuardarArchivo = new javax.swing.JButton();
        btCargarArchivo = new javax.swing.JButton();
        txEditor = new org.syntax.jedit.JEditTextArea();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txConsola = new javax.swing.JTextArea();
        bttStop = new javax.swing.JToggleButton();
        btLimpiar = new javax.swing.JButton();
        btStart = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txPopulationSize = new javax.swing.JTextField();
        cmbMutType = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        txMutRate = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cmbCrossType = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        txCrossRate = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cmbNatSel = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        txNatSize = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txNatProb = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txNumEvoluciones = new javax.swing.JTextField();
        chMaximizacion = new javax.swing.JCheckBox();
        txLow = new javax.swing.JPanel();
        txChromeLen = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txNumAletas = new javax.swing.JTextField();
        cmbSelGen = new javax.swing.JComboBox();
        cmbSelAlet = new javax.swing.JComboBox();
        cmbSetAlele = new javax.swing.JComboBox();
        txHighR = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txLowR = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        chIsRandom = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        txInitCrom = new javax.swing.JTextArea();
        btLoadCrom = new javax.swing.JButton();
        btSaveCrom = new javax.swing.JButton();
        chAlfabeticos = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnuAbrir = new javax.swing.JMenuItem();
        mnuGuardar = new javax.swing.JMenuItem();
        mnuSalir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mnuCopiar = new javax.swing.JMenuItem();
        mnuCortar = new javax.swing.JMenuItem();
        mnuPegar = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AG UD v1.0");
        setForeground(java.awt.Color.white);
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel3.setBorder(BorderFactory.createTitledBorder("Funcion de Fitness"));
        btGuardarArchivo.setText("Guardar Archivo");
        btGuardarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGuardarArchivoActionPerformed(evt);
            }
        });

        btCargarArchivo.setText("Cargar Archivo");
        btCargarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCargarArchivoActionPerformed(evt);
            }
        });

        txEditor.setFont(new java.awt.Font("Courier New", 0, 12));
        txEditor.setTokenMarker(new JavaTokenMarker());

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btCargarArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btGuardarArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(254, 254, 254))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(txEditor, javax.swing.GroupLayout.PREFERRED_SIZE, 490, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txEditor, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCargarArchivo)
                    .addComponent(btGuardarArchivo))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel4.setBorder(BorderFactory.createTitledBorder("Generacion de Resultados"));
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        txConsola.setColumns(20);
        txConsola.setFont(new java.awt.Font("Courier New", 0, 12));
        txConsola.setRows(5);
        txConsola.setTabSize(4);
        jScrollPane1.setViewportView(txConsola);

        bttStop.setText("Stop");

        btLimpiar.setText("Limpiar");
        btLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimpiarActionPerformed(evt);
            }
        });

        btStart.setText("Start");
        btStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btStartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btStart, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bttStop, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(499, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 798, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btStart)
                    .addComponent(bttStop)
                    .addComponent(btLimpiar))
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel5.setBorder(BorderFactory.createTitledBorder("Configuracion"));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel2.setOpaque(false);
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Cantidad de Poblacion:");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Tipo de Mutacion:");

        txPopulationSize.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txPopulationSize.setText("100");

        cmbMutType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aleatoria", "Mutacion de Intercambio", "Mutacion de Dos Vias" }));

        jLabel5.setText("Rata de Mutacion (%):");

        txMutRate.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txMutRate.setText("15");

        jLabel6.setText("Tipo de CrossOver:");

        cmbCrossType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Punto de Cruce Aleatorio", "Crossover Promediado", "Punto de Cruce Gen a Gen", "No CrossOver" }));
        cmbCrossType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCrossTypeItemStateChanged(evt);
            }
        });

        jLabel7.setText("Rata de CrossOver (P/Rata):");

        txCrossRate.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txCrossRate.setText("2");

        jLabel8.setText("Tipo de Seleccion:");

        cmbNatSel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecion Natural", "Selecion por Torneo", "Selecion de Ruleta" }));
        cmbNatSel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbNatSelItemStateChanged(evt);
            }
        });
        cmbNatSel.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cmbNatSelPropertyChange(evt);
            }
        });

        jLabel9.setText("Tama\u00f1o del Torneo");

        txNatSize.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txNatSize.setText("50");
        txNatSize.setEnabled(false);

        jLabel10.setText("Probabilidad de Seleccion");

        txNatProb.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txNatProb.setText("1.0");

        jLabel3.setText("Maximo numero de evoliciones:");

        txNumEvoluciones.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txNumEvoluciones.setText("100");

        chMaximizacion.setSelected(true);
        chMaximizacion.setText("Funcion Fitness de  Maximizacion");
        chMaximizacion.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chMaximizacion.setMargin(new java.awt.Insets(0, 0, 0, 0));
        chMaximizacion.setOpaque(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                        .addComponent(txPopulationSize, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                        .addComponent(txMutRate, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cmbCrossType, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txNatSize, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(txCrossRate, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cmbNatSel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                        .addComponent(txNatProb, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cmbMutType, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(txNumEvoluciones, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chMaximizacion))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 15, Short.MAX_VALUE)
                    .addComponent(txPopulationSize, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbMutType, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txMutRate)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbCrossType, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txCrossRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbNatSel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 15, Short.MAX_VALUE)
                    .addComponent(txNatSize))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txNatProb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chMaximizacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txNumEvoluciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(93, 93, 93))
        );
        jTabbedPane1.addTab("Configuracion General", jPanel2);

        txLow.setOpaque(false);
        txChromeLen.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txChromeLen.setText("16");
        txChromeLen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txChromeLenActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Tama\u00f1o del Cromosoma:");

        jLabel11.setText("Numero de Alelos:");

        txNumAletas.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txNumAletas.setText("1");
        txNumAletas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txNumAletasActionPerformed(evt);
            }
        });

        cmbSelGen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16" }));
        cmbSelGen.setVisible(false);
        cmbSelGen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSelGenActionPerformed(evt);
            }
        });

        cmbSelAlet.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1" }));
        cmbSelAlet.setVisible(false);
        cmbSelAlet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSelAletActionPerformed(evt);
            }
        });

        cmbSetAlele.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1" }));
        cmbSetAlele.setVisible(false);

        txHighR.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txHighR.setText("1");
        txHighR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txHighRActionPerformed(evt);
            }
        });

        jLabel15.setText("Rango:");

        txLowR.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txLowR.setText("0");
        txLowR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txLowRActionPerformed(evt);
            }
        });

        jLabel16.setText("---");

        chIsRandom.setSelected(true);
        chIsRandom.setText("Inicializacion Aleatoria de Genes");
        chIsRandom.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chIsRandom.setMargin(new java.awt.Insets(0, 0, 0, 0));
        chIsRandom.setOpaque(false);

        txInitCrom.setColumns(20);
        txInitCrom.setFont(new java.awt.Font("Courier New", 0, 12));
        txInitCrom.setRows(5);
        txInitCrom.setTabSize(6);
        txInitCrom.setMargin(new java.awt.Insets(4, 4, 4, 4));
        jScrollPane3.setViewportView(txInitCrom);

        btLoadCrom.setText("Cargar");
        btLoadCrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLoadCromActionPerformed(evt);
            }
        });

        btSaveCrom.setText("Guardar");
        btSaveCrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveCromActionPerformed(evt);
            }
        });

        chAlfabeticos.setText("Genes Alfabeticos");
        chAlfabeticos.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chAlfabeticos.setMargin(new java.awt.Insets(0, 0, 0, 0));
        chAlfabeticos.setOpaque(false);

        javax.swing.GroupLayout txLowLayout = new javax.swing.GroupLayout(txLow);
        txLow.setLayout(txLowLayout);
        txLowLayout.setHorizontalGroup(
            txLowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txLowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(txLowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chAlfabeticos)
                    .addComponent(chIsRandom)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                    .addGroup(txLowLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txLowR, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txHighR, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(txLowLayout.createSequentialGroup()
                        .addComponent(cmbSelGen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbSelAlet, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbSetAlele, 0, 134, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, txLowLayout.createSequentialGroup()
                        .addGroup(txLowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(txLowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txNumAletas)
                            .addComponent(txChromeLen, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, txLowLayout.createSequentialGroup()
                        .addComponent(btLoadCrom, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSaveCrom)))
                .addContainerGap())
        );
        txLowLayout.setVerticalGroup(
            txLowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txLowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(txLowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txChromeLen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(txLowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txNumAletas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(txLowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txLowR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txHighR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chAlfabeticos)
                .addGap(6, 6, 6)
                .addGroup(txLowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSaveCrom)
                    .addComponent(btLoadCrom))
                .addGap(35, 35, 35)
                .addGroup(txLowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSelGen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbSelAlet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbSetAlele, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chIsRandom)
                .addGap(43, 43, 43))
        );
        jTabbedPane1.addTab("Genes", txLow);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jMenu1.setText("Archivo");
        mnuAbrir.setText("Cargar Fitness");
        mnuAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAbrirActionPerformed(evt);
            }
        });

        jMenu1.add(mnuAbrir);

        mnuGuardar.setText("Guardar Fitness");
        mnuGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuGuardarActionPerformed(evt);
            }
        });

        jMenu1.add(mnuGuardar);

        mnuSalir.setText("Salir");
        mnuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSalirActionPerformed(evt);
            }
        });

        jMenu1.add(mnuSalir);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edicion");
        mnuCopiar.setText("Copiar      CTRL + C");
        mnuCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCopiarActionPerformed(evt);
            }
        });

        jMenu2.add(mnuCopiar);

        mnuCortar.setText("Cortar      CRTL + X");
        mnuCortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCortarActionPerformed(evt);
            }
        });

        jMenu2.add(mnuCortar);

        mnuPegar.setText("Pegar       CTRL + V");
        mnuPegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuPegarActionPerformed(evt);
            }
        });

        jMenu2.add(mnuPegar);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Ayuda");
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Ayuda");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });

        jMenu3.add(jMenuItem1);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
// TODO add your handling code here:
               String cmd = null;
        try{
            cmd = "explorer ayuda\\inicio.htm";
            Process p = Runtime.getRuntime().exec(cmd);
        }
        catch(IOException x){
                        // couldn't exec browser
            System.err.println("Could not invoke browser, command=" + cmd);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed
// TODO add your handling code here:

    }//GEN-LAST:event_jMenu3ActionPerformed

    private void mnuCortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCortarActionPerformed
// TODO add your handling code here:
        txEditor.cut();
    }//GEN-LAST:event_mnuCortarActionPerformed

    private void mnuPegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuPegarActionPerformed
// TODO add your handling code here:
            txEditor.paste();          
    }//GEN-LAST:event_mnuPegarActionPerformed

    private void mnuCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCopiarActionPerformed
// TODO add your handling code here:
            txEditor.copy();  
    }//GEN-LAST:event_mnuCopiarActionPerformed

    private void mnuGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuGuardarActionPerformed
// TODO add your handling code here:
        guardar();
    }//GEN-LAST:event_mnuGuardarActionPerformed

    private void mnuAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAbrirActionPerformed
// TODO add your handling code here:
        
        abrir(); 
    }//GEN-LAST:event_mnuAbrirActionPerformed

    private void btLoadCromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLoadCromActionPerformed
// TODO add your handling code here:
   
                
		JFileChooser fileChooser = new JFileChooser();
                javax.swing.filechooser.FileFilter crmFilter = createFileFilter("Archivos de genes CRM ",
                                         true, "crm");                
                
                fileChooser.resetChoosableFileFilters();
                fileChooser.addChoosableFileFilter(crmFilter);             
                
		fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
		int result= fileChooser.showOpenDialog(this);
		if (result== JFileChooser.CANCEL_OPTION) return;
		File name= fileChooser.getSelectedFile();
                
                GenFile = name;
                cargarGenes();

    }//GEN-LAST:event_btLoadCromActionPerformed
   
    public void cargarGenes(){
        /**
         *Funcion de carga de los genes .. 
         */
         int CromLong = 0,CromAlelo = 0;
                

         if(GenFile.exists()) {
            if (GenFile.isFile()) {
		try {
			BufferedReader input= new BufferedReader(new FileReader (GenFile));
			StringBuffer buffer= new StringBuffer();
			String text,Valor = "";
                                        
                                  
			txInitCrom.setText("");
   
                        if ((text=input.readLine()) !=null)    // lee la linea de rangos
                                txLowR.setText( text );
                        if ((text=input.readLine()) !=null)    // lee la linea de rangos
                                txHighR.setText( text );
                                        
                        SetRangos();
                                        
                	while ((text=input.readLine()) !=null){
                                // analisis de la linea de texto
                                for(int i =0 ;i<text.length() ;i++){
                                        if(  text.charAt(i)  == '\t' && CromLong == 0){   // detecta si hay un tabulador
                                                 CromAlelo++;
                                         }
                                 } 
                                            
				buffer.append(text+ "\n");
                                CromLong++;  // cuenta el tamaño del cromosoma
                        }
                        // *******************  // ******************** // 
                        txChromeLen.setText( String.valueOf(CromLong) );  // carca el tamaño del cromosoma
                         SetCromLen();
                          // ******************  // ********************* //
                        txNumAletas.setText( String.valueOf(CromAlelo + 1) );
                        SetCromAleo();
                       // ****************** //  ********************** //
                                        
                        Valor = "";
                        int i = 0;
                        BufferedReader input2 = new BufferedReader(new FileReader (GenFile));
 					
                        text=input2.readLine();    // lee la linea de rangos
                        text=input2.readLine();     // lee la linea de rangos
                                            
                        while ((text=input2.readLine()) !=null){
                                // analisis de la linea de texto
                                int j = 0;
                                Valor = "";
                                for(int k =0 ;k<text.length() ;k++){
                                          if(  text.charAt(k)  == '\t' ){   // detecta si hay un tabulador

                                                 InitAlel[i][j] = Integer.parseInt(Valor);
                                                 if( InitAlel[i][j] < Integer.parseInt( txLowR.getText() ) 
                                                          || InitAlel[i][j] > Integer.parseInt( txHighR.getText() )){
                                                                    JOptionPane.showMessageDialog(null," Se encontraron valores fuera de rango "
                                                                                                ," Error ",JOptionPane.ERROR_MESSAGE);
                                                   }    
                                                   Valor = "";
                                                    j++;
                                          }
                                           else{
                                             
                                                   if(chAlfabeticos.isSelected()  ){
                                                        //Valor = Valor + String.valueOf( Character.getNumericValue( text.charAt(k) ) );
                                                         Valor = Valor + String.valueOf( (int)(text.charAt(k)) );
                                                    }
                                                    else{
                                                          if(Character.isLetter(text.charAt( k)))  {
                                                                JOptionPane.showMessageDialog(null,"Error en la seleccion de tipo de genes.", "Error",JOptionPane.ERROR_MESSAGE);
                                                                break;
                                                          }
                                                          else  {
                                                                Valor = Valor + String.valueOf( text.charAt(k) );
                                                          }      
                                                    }
   
                                          }
                                 } 
                                 InitAlel[i][j] = Integer.parseInt(Valor);
                                 if( InitAlel[i][j] < Integer.parseInt( txLowR.getText() ) 
                                      || InitAlel[i][j] > Integer.parseInt( txHighR.getText() )){
                                                 JOptionPane.showMessageDialog(null," Se encontraron valores fuera de rango "
                                                         ," Error ",JOptionPane.ERROR_MESSAGE);
                                 }
                                 i++;
                        }                                       
                                                       
                         // *****************  // *************************** //
                         txInitCrom.append(buffer.toString());
                                       
		}
		catch (IOException ioException) {
			JOptionPane.showMessageDialog(null,"Error en el archivo", "Error",JOptionPane.ERROR_MESSAGE);
		}
	}
	else {
		JOptionPane.showMessageDialog(null," No existe "," Error ",JOptionPane.ERROR_MESSAGE);
	}
      }         
        
        
        
    }
    
    
    private void btSaveCromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveCromActionPerformed
// TODO add your handling code here:
		JOptionPane.showMessageDialog(null,"Por favor no olvide colocar la extension del archivo (*.crm)!");
		JFileChooser fileChooser = new JFileChooser();
                
                javax.swing.filechooser.FileFilter crmFilter = createFileFilter("Archivos de genes CRM ",
                                         true, "crm");                
                
                fileChooser.resetChoosableFileFilters();
                fileChooser.addChoosableFileFilter(crmFilter);
                
		fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
		int result= fileChooser.showSaveDialog(this);
		if (result== JFileChooser.CANCEL_OPTION) return;
			File name= fileChooser.getSelectedFile();
			try {
				PrintWriter output= new PrintWriter(new FileWriter( name));
                                String Rangos = txLowR.getText() + "\n" + txHighR.getText() + "\n";
				output.write(Rangos + txInitCrom.getText());
				output.close();
                                GenFile = name;
                                cargarGenes();
			}
			catch (IOException ioException) {
				JOptionPane.showMessageDialog(null,"Error en el archivo","Error",JOptionPane.ERROR_MESSAGE);
			}
          
        
    }//GEN-LAST:event_btSaveCromActionPerformed

    private void cmbSelAletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSelAletActionPerformed
// TODO add your handling code here:
       int low = Integer.parseInt( txLowR.getText() ); 
       int Gen,Aleta;
       int Alelo;
       Gen = cmbSelGen.getSelectedIndex();
       Aleta = cmbSelAlet.getSelectedIndex();
       Alelo = InitAlel[Gen][Aleta];
       cmbSetAlele.setSelectedIndex( Alelo  + low);
    }//GEN-LAST:event_cmbSelAletActionPerformed

    private void cmbSelGenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSelGenActionPerformed
// TODO add your handling code here:
       int low = Integer.parseInt( txLowR.getText() ); 
       int Gen,Aleta;
       int Alelo;
       Gen = cmbSelGen.getSelectedIndex();
       Aleta = cmbSelAlet.getSelectedIndex();
       Alelo = InitAlel[Gen][Aleta];
       cmbSetAlele.setSelectedIndex( Alelo  + low);
    }//GEN-LAST:event_cmbSelGenActionPerformed

    private void txHighRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txHighRActionPerformed
// TODO add your handling code here:
        SetRangos();
    }//GEN-LAST:event_txHighRActionPerformed

    private void SetRangos(){
        int low = Integer.parseInt( txLowR.getText() );
        int high = Integer.parseInt( txHighR.getText() );
        
        String[] IdemGenes = new String[  high - low + 1];  
        
        for(int i=low ; i< high + 1 ;i++)
            IdemGenes[i - low] =  String.valueOf(i); ;
        
        cmbSetAlele.setModel(new javax.swing.DefaultComboBoxModel( IdemGenes ));       
    }
    
    private void txLowRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txLowRActionPerformed
// TODO add your handling code here:
        int low = Integer.parseInt( txLowR.getText() );
        int high = Integer.parseInt( txHighR.getText() );
        
        String[] IdemGenes = new String[  high - low + 1 ];  
        
        for(int i=low ; i<high + 1  ;i++)
            IdemGenes[i - low] =  String.valueOf(i); ;
        
        cmbSetAlele.setModel(new javax.swing.DefaultComboBoxModel( IdemGenes ));  
    }//GEN-LAST:event_txLowRActionPerformed

    private void txNumAletasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txNumAletasActionPerformed
// TODO add your handling code here:
        SetCromAleo();
    }//GEN-LAST:event_txNumAletasActionPerformed
    
    private void SetCromAleo(){
              String[] NumGenes = new String[  Integer.parseInt( txNumAletas.getText() ) ];  

            for(int i=0;i<NumGenes.length;i++)
                NumGenes[i] = String.valueOf(i+1);

            cmbSelAlet.setModel(new javax.swing.DefaultComboBoxModel( NumGenes ));   
            InitAlel = new int[Integer.parseInt( txChromeLen.getText() )][ Integer.parseInt( txNumAletas.getText() ) ];     
    }
    
    private void txChromeLenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txChromeLenActionPerformed
// TODO add your handling code here:
        SetCromLen();
    }//GEN-LAST:event_txChromeLenActionPerformed
 
    private void SetCromLen(){
        String[] NumGenes = new String[  Integer.parseInt( txChromeLen.getText() ) ];  
        
        for(int i=0;i<NumGenes.length;i++)
            NumGenes[i] = String.valueOf(i+1);
        
        cmbSelGen.setModel(new javax.swing.DefaultComboBoxModel( NumGenes ));
        InitAlel = new int[Integer.parseInt( txChromeLen.getText() )][ Integer.parseInt( txNumAletas.getText() ) ];      
    
        
    }
    
    private void cmbNatSelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbNatSelItemStateChanged
// TODO add your handling code here:
        if( cmbNatSel.getSelectedIndex() != 1 )
            txNatSize.setEnabled(false);
        else
            txNatSize.setEnabled(true);
    }//GEN-LAST:event_cmbNatSelItemStateChanged

    private void cmbNatSelPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cmbNatSelPropertyChange
// TODO add your handling code here:
    }//GEN-LAST:event_cmbNatSelPropertyChange

    private void cmbCrossTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCrossTypeItemStateChanged
// TODO add your handling code here:
        if( cmbCrossType.getSelectedIndex() == 0 )
            txCrossRate.setEnabled(true);
        else
            txCrossRate.setEnabled(false);
    }//GEN-LAST:event_cmbCrossTypeItemStateChanged

    private void btLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimpiarActionPerformed
// TODO add your handling code here:
        txConsola.setText("");    
    }//GEN-LAST:event_btLimpiarActionPerformed

    private void btGuardarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGuardarArchivoActionPerformed
// TODO add your handling code here:
        guardar();
    }//GEN-LAST:event_btGuardarArchivoActionPerformed

    private void btCargarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCargarArchivoActionPerformed
// TODO add your handling code here:
        abrir();
    }//GEN-LAST:event_btCargarArchivoActionPerformed

    private void mnuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSalirActionPerformed
// TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_mnuSalirActionPerformed

    private void btStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btStartActionPerformed
// TODO add your handling code here:
        evo = new evolution("Evolucion");
        evo.start();
    }//GEN-LAST:event_btStartActionPerformed
    
    public void printc(String s)    {
        String Contenido;
        Contenido = txConsola.getText();
        txConsola.setText(Contenido + s);       
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GaFrame().setVisible(true);
            }
        });
    }
    
    
    private String createFileNameFilterDescriptionFromExtensions(
            String description, String[] extensions) {
        String fullDescription = (description == null) ?
                "(" : description + " (";
        // build the description from the extension list
        fullDescription += "." + extensions[0];
        for (int i = 1; i < extensions.length; i++) {
            fullDescription += ", .";
            fullDescription += extensions[i];
        }
        fullDescription += ")";
        return fullDescription;
    }
   
    private javax.swing.filechooser.FileFilter createFileFilter(String description,
            boolean showExtensionInDescription, String...extensions) {
        if (showExtensionInDescription) {
            description = createFileNameFilterDescriptionFromExtensions(
                    description, extensions);
        }
        return new FileNameExtensionFilter(description, extensions);
    }
 
    
    public void abrir () {
                
		JFileChooser fileChooser = new JFileChooser();

                javax.swing.filechooser.FileFilter splFilter = createFileFilter("Archivos de fitness SPL ",
                                         true, "spl");                
                
                fileChooser.resetChoosableFileFilters();
                fileChooser.addChoosableFileFilter(splFilter);
                
		fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
		int result= fileChooser.showOpenDialog(this);
		if (result== JFileChooser.CANCEL_OPTION) return;
		File name= fileChooser.getSelectedFile();
                if (fileOpened == 0)
                    SPL.init(name.getAbsolutePath());
                else
                    SPL.reinit(name.getAbsolutePath());    

                fileOpened = 1;
                if(name.exists()) {
			if (name.isFile()) {
				try {
					BufferedReader input= new BufferedReader(new FileReader (name));
					StringBuffer buffer= new StringBuffer();
					String text;
					txEditor.setText("");
					while ((text=input.readLine()) !=null)
						buffer.append(text+ "\n");
					//txEditor.append(buffer.toString());
                                        txEditor.setText(buffer.toString());
                                       
				}
				catch (IOException ioException) {
					JOptionPane.showMessageDialog(null,"Error en el archivo", "Error",JOptionPane.ERROR_MESSAGE);
				}
			}
			else {
				JOptionPane.showMessageDialog(null," No existe "," Error ",JOptionPane.ERROR_MESSAGE);
			}
		}
                
	}
        
	public void guardar () {
		JOptionPane.showMessageDialog(null,"Por favor no olvide colocar la extension del archivo (*.spl)!");
		JFileChooser fileChooser = new JFileChooser();
                javax.swing.filechooser.FileFilter splFilter = createFileFilter("Archivos de fitness SPL ",
                                         true, "spl");                
                
                fileChooser.resetChoosableFileFilters();
                fileChooser.addChoosableFileFilter(splFilter);                
		fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
		int result= fileChooser.showSaveDialog(this);
		if (result== JFileChooser.CANCEL_OPTION) return;
			File name= fileChooser.getSelectedFile();
			try {
				PrintWriter output= new PrintWriter(new FileWriter( name));
				output.write(txEditor.getText());
				output.close();
			}
			catch (IOException ioException) {
				JOptionPane.showMessageDialog(null,"Error en el archivo","Error",JOptionPane.ERROR_MESSAGE);
			}
                if (fileOpened == 1)
                    SPL.reinit(name.getAbsolutePath());           
	} 
    
    // clase anidada hilo de evolucion ....    
    public class evolution extends Thread   {
        
        public evolution(String nombre){
            super(nombre);    
        }
        
        public void run(){
           initGa();
        }  
        
        void initGa(){
            /**
             *Funcion desde donde se inicializa el algoritmo genetico ...
             **/
    // Evoluciona el genotipo al pulsar el boton
            GA.gaConf = new Configuration();
            GA.gaConf.reset();
            
            int ChromSize = Integer.parseInt(txChromeLen.getText()) ;

            
            Gene[] sampleGenes = new Gene[ChromSize];

            int numAletas = Integer.parseInt( txNumAletas.getText() ) ;
            
            int low = Integer.parseInt( txLowR.getText() );   //rango de los cromosomas
            int high = Integer.parseInt( txHighR.getText() );
            try{
                for (int i = 0; i < ChromSize; i++) {
                  CompositeGene compositeGene = new CompositeGene(GA.gaConf);
                  for(int j=0; j < numAletas; j++){
                    IntegerGene gene = new IntegerGene(GA.gaConf, low, high );  
                    gene.setAllele( new Integer( InitAlel[i][j] )  );
                    compositeGene.addGene(gene);
                    
                  }  
                  sampleGenes[i] = compositeGene;
                }        
            }
            catch (InvalidConfigurationException e) {
		      e.printStackTrace();
		      System.exit( -2);
            }
            

            
            GA gFuncion = new GA(txPopulationSize.getText(),
                             txMutRate.getText(),cmbMutType.getSelectedIndex(),
                             cmbCrossType.getSelectedIndex(),txCrossRate.getText(),
                             cmbNatSel.getSelectedIndex(),txNatSize.getText(),txNatProb.getText(),
                             sampleGenes,  chIsRandom.isSelected() ,chMaximizacion.isSelected() ); 
                             
            int numEvolutions = Integer.parseInt( txNumEvoluciones.getText() ) ;
            int i;
            double prom = 0;
            for (i = 0; i < numEvolutions; i++) {
                gFuncion.genotype.evolve();
                // Improme progreso.
                // ---------------

                IChromosome fittest = gFuncion.genotype.getFittestChromosome();
                double fitness = fittest.getFitnessValue() - 1000;
                //txConsola.setSelectedTextColor( new java.awt.Color(0, 0, 255)  );
                
                txConsola.setText("");
                txConsola.append("Valor actual del mejor cromosoma de la generacion " + i + " : " +
                            fitness + " ... \n");
                
                for(int k=0; k<numAletas; k++){
                    txConsola.append("                 >>    ");  
                    prom = 0;
                    for(int j =0 ;j< fittest.size() ;j++) {    
                        
                        CompositeGene comp = (CompositeGene)fittest.getGene(j);
                        IntegerGene item = (IntegerGene)comp.geneAt(k);
                        Integer GenValue  = (Integer) item.getAllele() ;

                        
                         if( chAlfabeticos.isSelected() ){
                                //Valor = Valor + String.valueOf( Character.getNumericValue( text.charAt(k) ) );
                                 txConsola.append( "\t" +   ((char)GenValue.intValue()) );
                         }
                         else{
                                 txConsola.append( "\t" + GenValue.intValue() );
                         }  
                             
                        prom = prom + (double)GenValue.intValue();    
                    }             

                    prom = prom/ (double)fittest.size();
                    txConsola.append("  >>  " + prom +"\n\r");
                } 
                  
                if( bttStop.isSelected() ) {
                    bttStop.setSelected(false);
                    break;
                }    
            }		


            IChromosome fittest = gFuncion.genotype.getFittestChromosome();
            double fitness = fittest.getFitnessValue() - 1000;
            
            txConsola.append(" En " + i + " Generaciones ...\n\r");
            txConsola.append(" El mejor cromosoma fue: " +
                        fitness + " ... \n");

            IChromosome FitChromosome = gFuncion.genotype.getFittestChromosome();
            
            for(int k=0; k<numAletas; k++){
                txConsola.append("    >>    ");
                prom = 0;
                for(i =0 ;i< FitChromosome.size() ;i++) {

                    CompositeGene comp = (CompositeGene)FitChromosome.getGene(i);
                    IntegerGene color = (IntegerGene)comp.geneAt(k);
                    Integer GenValue  = (Integer) color.getAllele() ;
 

                                       
                   if( chAlfabeticos.isSelected() ){
                                //Valor = Valor + String.valueOf( Character.getNumericValue( text.charAt(k) ) );
                         txConsola.append( "\t" +   ((char)GenValue.intValue()) );
                   }
                   else{
                         txConsola.append( "\t" + GenValue.intValue() );
                   }                     
                    
                    prom = prom + (double)GenValue.intValue();
                    
                } 
                prom = prom/ (double)FitChromosome.size();
                txConsola.append("  >>  " + prom +"\n\r");
            }    
            txConsola.append("\n\r\n\r");               
            System.gc();
       }
    }  
    
    
        
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCargarArchivo;
    private javax.swing.JButton btGuardarArchivo;
    private javax.swing.JButton btLimpiar;
    private javax.swing.JButton btLoadCrom;
    private javax.swing.JButton btSaveCrom;
    private javax.swing.JButton btStart;
    private javax.swing.JToggleButton bttStop;
    private javax.swing.JCheckBox chAlfabeticos;
    private javax.swing.JCheckBox chIsRandom;
    private javax.swing.JCheckBox chMaximizacion;
    private javax.swing.JComboBox cmbCrossType;
    private javax.swing.JComboBox cmbMutType;
    private javax.swing.JComboBox cmbNatSel;
    private javax.swing.JComboBox cmbSelAlet;
    private javax.swing.JComboBox cmbSelGen;
    private javax.swing.JComboBox cmbSetAlele;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JMenuItem mnuAbrir;
    private javax.swing.JMenuItem mnuCopiar;
    private javax.swing.JMenuItem mnuCortar;
    private javax.swing.JMenuItem mnuGuardar;
    private javax.swing.JMenuItem mnuPegar;
    private javax.swing.JMenuItem mnuSalir;
    private javax.swing.JTextField txChromeLen;
    private javax.swing.JTextArea txConsola;
    private javax.swing.JTextField txCrossRate;
    private org.syntax.jedit.JEditTextArea txEditor;
    private javax.swing.JTextField txHighR;
    private javax.swing.JTextArea txInitCrom;
    private javax.swing.JPanel txLow;
    private javax.swing.JTextField txLowR;
    private javax.swing.JTextField txMutRate;
    private javax.swing.JTextField txNatProb;
    private javax.swing.JTextField txNatSize;
    private javax.swing.JTextField txNumAletas;
    private javax.swing.JTextField txNumEvoluciones;
    private javax.swing.JTextField txPopulationSize;
    // End of variables declaration//GEN-END:variables
    
}
