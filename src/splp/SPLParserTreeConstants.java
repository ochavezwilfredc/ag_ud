package splp;
/* Generated By:JJTree: Do not edit this line. .\SPLParserTreeConstants.java */

public interface SPLParserTreeConstants
{
  public int JJTCOMPILATIONUNIT = 0;
  public int JJTVARDECLARATION = 1;
  public int JJTVOID = 2;
  public int JJTASSIGNMENT = 3;
  public int JJTORNODE = 4;
  public int JJTANDNODE = 5;
  public int JJTBITWISEORNODE = 6;
  public int JJTBITWISEXORNODE = 7;
  public int JJTBITWISEANDNODE = 8;
  public int JJTEQNODE = 9;
  public int JJTNENODE = 10;
  public int JJTLTNODE = 11;
  public int JJTGTNODE = 12;
  public int JJTLENODE = 13;
  public int JJTGENODE = 14;
  public int JJTCOSNODE = 15;
  public int JJTSINNODE = 16;
  public int JJTPOPNODE = 17;
  public int JJTGETNODE = 18;
  public int JJTPOWNODE = 19;
  public int JJTSQRTNODE = 20;
  public int JJTGENNODE = 21;
  public int JJTMINNODE = 22;
  public int JJTMAXNODE = 23;
  public int JJTABSNODE = 24;
  public int JJTADDNODE = 25;
  public int JJTSUBTRACTNODE = 26;
  public int JJTMULNODE = 27;
  public int JJTDIVNODE = 28;
  public int JJTMODNODE = 29;
  public int JJTBITWISECOMPLNODE = 30;
  public int JJTNOTNODE = 31;
  public int JJTID = 32;
  public int JJTNUMBERCONSTNODE = 33;
  public int JJTTRUENODE = 34;
  public int JJTFALSENODE = 35;
  public int JJTBLOCK = 36;
  public int JJTSTATEMENTEXPRESSION = 37;
  public int JJTIFSTATEMENT = 38;
  public int JJTWHILESTATEMENT = 39;
  public int JJTFORSTATEMENT = 40;
  public int JJTREADSTATEMENT = 41;
  public int JJTWRITESTATEMENT = 42;


  public String[] jjtNodeName = {
    "CompilationUnit",
    "VarDeclaration",
    "void",
    "Assignment",
    "OrNode",
    "AndNode",
    "BitwiseOrNode",
    "BitwiseXorNode",
    "BitwiseAndNode",
    "EQNode",
    "NENode",
    "LTNode",
    "GTNode",
    "LENode",
    "GENode",
    "CosNode",
    "SinNode",
    "PopNode",
    "GetNode",
    "PowNode",
    "SqrtNode",
    "GenNode",
    "MinNode",
    "MaxNode",
    "AbsNode",
    "AddNode",
    "SubtractNode",
    "MulNode",
    "DivNode",
    "ModNode",
    "BitwiseComplNode",
    "NotNode",
    "Id",
    "NumberConstNode",
    "TrueNode",
    "FalseNode",
    "Block",
    "StatementExpression",
    "IfStatement",
    "WhileStatement",
    "ForStatement",
    "ReadStatement",
    "WriteStatement",
  };
}
